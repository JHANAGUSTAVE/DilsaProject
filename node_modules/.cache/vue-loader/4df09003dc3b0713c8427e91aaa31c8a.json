{"remainingRequest":"/home/nanouni/DilsaProject/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/nanouni/DilsaProject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/nanouni/DilsaProject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nanouni/DilsaProject/src/components/Contact.vue?vue&type=template&id=cf6573c0&","dependencies":[{"path":"/home/nanouni/DilsaProject/src/components/Contact.vue","mtime":1634592746057},{"path":"/home/nanouni/DilsaProject/node_modules/cache-loader/dist/cjs.js","mtime":1634074391745},{"path":"/home/nanouni/DilsaProject/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1634074397369},{"path":"/home/nanouni/DilsaProject/node_modules/cache-loader/dist/cjs.js","mtime":1634074391745},{"path":"/home/nanouni/DilsaProject/node_modules/vue-loader/lib/index.js","mtime":1634074395921}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
{"remainingRequest":"/home/nanouni/DilsaProject/node_modules/babel-loader/lib/index.js!/home/nanouni/DilsaProject/node_modules/eslint-loader/index.js??ref--13-0!/home/nanouni/DilsaProject/src/store/index.js","dependencies":[{"path":"/home/nanouni/DilsaProject/src/store/index.js","mtime":1634599774033},{"path":"/home/nanouni/DilsaProject/node_modules/cache-loader/dist/cjs.js","mtime":1634074391745},{"path":"/home/nanouni/DilsaProject/node_modules/babel-loader/lib/index.js","mtime":1634074395017},{"path":"/home/nanouni/DilsaProject/node_modules/eslint-loader/index.js","mtime":1634074392193}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKaW1wb3J0IHsgcmVxdWVzdCB9IGZyb20gJy4vYXBpJzsKaW1wb3J0IGNyZWF0ZVBlcnNpc3RlZFN0YXRlIGZyb20gJ3Z1ZXgtcGVyc2lzdGVkc3RhdGUnOyAvLyBpbXBvcnQgaTE4biBmcm9tICdAL2xhbmcvbGFuZycKCmltcG9ydCB7IHNlbmRSZXF1ZXN0IH0gZnJvbSAiLi90cmFuc2FjdGlvblBhcnNlciI7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCB2YXIgc3RvcmUgPSBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIHVzZXI6IG51bGwKICB9LAogIG11dGF0aW9uczogewogICAgc2V0VXNlcjogZnVuY3Rpb24gc2V0VXNlcihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS51c2VyID0gcGF5bG9hZDsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oInRva2VuIiwgc3RhdGUudXNlci50b2tlbik7IC8vIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCJ0b2tlbiIpCiAgICAgIC8vdGhpcy5kaXNwYXRjaCgiY2FsbFNwbGFzaEluT3V0IiwgeyB0b2tlbjogcGF5bG9hZC50b2tlbiB9KQogICAgICAvLyB0aGlzLmRpc3BhdGNoKCJjYWxsVXNlcnMiLCB7IHRva2VuOiBwYXlsb2FkLnRva2VuLCB1c2VyOiBwYXlsb2FkLnVzZXJfaWQgfSkKICAgICAgLy90aGlzLmRpc3BhdGNoKCJjYWxsV2lkZ2V0RGlzcGxheSIsIHsgdG9rZW46IHBheWxvYWQudG9rZW4sIHVzZXJfaWQ6IHBheWxvYWQudXNlcl9pZCB9KQogICAgICAvLyB0aGlzLmRpc3BhdGNoKCJjYWxsT3BlcmF0b3JzIiwgeyB0b2tlbjogcGF5bG9hZC50b2tlbiB9KQogICAgfSwKICAgIHNldFByb2R1Y3RzOiBmdW5jdGlvbiBzZXRQcm9kdWN0cyhzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5wcm9kdWN0cyA9IHBheWxvYWQ7CiAgICAgIGNvbnNvbGUuaW5mbyhzdGF0ZS5wcm9kdWN0cyk7IC8vdGhpcy5kaXNwYXRjaCgiY2FsbFNwbGFzaEluT3V0IiwgeyB0b2tlbjogcGF5bG9hZC50b2tlbiB9KQogICAgICAvLyB0aGlzLmRpc3BhdGNoKCJjYWxsVXNlcnMiLCB7IHRva2VuOiBwYXlsb2FkLnRva2VuLCB1c2VyOiBwYXlsb2FkLnVzZXJfaWQgfSkKICAgICAgLy90aGlzLmRpc3BhdGNoKCJjYWxsV2lkZ2V0RGlzcGxheSIsIHsgdG9rZW46IHBheWxvYWQudG9rZW4sIHVzZXJfaWQ6IHBheWxvYWQudXNlcl9pZCB9KQogICAgICAvLyB0aGlzLmRpc3BhdGNoKCJjYWxsT3BlcmF0b3JzIiwgeyB0b2tlbjogcGF5bG9hZC50b2tlbiB9KQogICAgfSwKICAgIHJlc2V0U3RhdGU6IGZ1bmN0aW9uIHJlc2V0U3RhdGUoc3RhdGUpIHsKICAgICAgc3RhdGUudXNlciA9IG51bGw7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBjYWxsVXNlcnM6IGZ1bmN0aW9uIGNhbGxVc2VycyhfcmVmLCBwYXlsb2FkKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgY29tbWl0OwogICAgICBwYXlsb2FkOyAvLyBsZXQgcGFyYW0gPSB7Li4ucGF5bG9hZCB9OwogICAgICAvLyBzZW5kUmVxdWVzdCh0aGlzLCBjb21taXQsICJjYWxsVXNlcnMiLCAidXNlciIsIHBhcmFtKQogICAgfSwKICAgIGNhbGxQcm9kdWN0czogZnVuY3Rpb24gY2FsbFByb2R1Y3RzKF9yZWYyKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICBjb21taXQ7IC8vIGxldCBwYXJhbSA9IHsuLi5wYXlsb2FkIH07CiAgICAgIC8vIHNlbmRSZXF1ZXN0KHRoaXMsIGNvbW1pdCwgImNhbGxVc2VycyIsICJ1c2VyIiwgcGFyYW0pCgogICAgICByZXF1ZXN0LmdldCgiL3Byb2R1Y3RzLyIsIHt9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIC8vc2F2aW5nIHRoZSBkYXRhIGluIHRoZSB2dWV4IHN0b3JlCiAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgIHNlbmRSZXF1ZXN0KF90aGlzLCBjb21taXQsICJjYWxsUHJvZHVjdHMiLCBkYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgLy8gY29tbWl0KCdzZXRMb2FkaW5nJywgZmFsc2UsIHtyb290OnRydWV9KQogICAgICAgIHRyeSB7CiAgICAgICAgICB2YXIgcmVzcG9uc2UgPSBlcnJvci5yZXNwb25zZS5kYXRhOwoKICAgICAgICAgIGlmIChyZXNwb25zZS5lcnJvcikgewogICAgICAgICAgICBjb21taXQoJ3NldEVycm9yJywgcmVzcG9uc2UuZXJyb3JfbWVzc2FnZSwgewogICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBjb21taXQoJ3NldEVycm9yJywgZXJyLm1lc3NhZ2UsIHsKICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZjMsIHBheWxvYWQpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgcmVxdWVzdC5wb3N0KCcvbG9naW4nLCBwYXlsb2FkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICBjb21taXQoJ3NldFVzZXInLCBkYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dChfcmVmNCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICBjb21taXQoJ3Jlc2V0U3RhdGUnKTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIHVzZXI6IGZ1bmN0aW9uIHVzZXIoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXI7CiAgICB9LAogICAgdG9rZW46IGZ1bmN0aW9uIHRva2VuKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS50b2tlbjsKICAgIH0sCiAgICBwcm9kdWN0czogZnVuY3Rpb24gcHJvZHVjdHMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnByb2R1Y3RzOwogICAgfQogIH0sCiAgc3RyaWN0OiB0cnVlLAogIHBsdWdpbnM6IFtjcmVhdGVQZXJzaXN0ZWRTdGF0ZSh7CiAgICBrZXk6ICdkaWxzYScKICB9KV0KfSk7"},{"version":3,"sources":["/home/nanouni/DilsaProject/src/store/index.js"],"names":["Vue","Vuex","request","createPersistedState","sendRequest","use","store","Store","state","user","mutations","setUser","payload","localStorage","setItem","token","setProducts","products","console","info","resetState","actions","callUsers","commit","callProducts","get","then","response","data","catch","error","error_message","root","err","message","login","post","log","logout","getters","strict","plugins","key"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport {request} from './api'\nimport createPersistedState from 'vuex-persistedstate'\n// import i18n from '@/lang/lang'\n\nimport {sendRequest } from \"./transactionParser\";\n\nVue.use(Vuex)\n\n\nexport const store = new Vuex.Store({\n    state: {\n        user: null,\n    },\n    mutations: {\n        setUser(state, payload) {\n            state.user = payload \n            localStorage.setItem(\"token\", state.user.token);\n            // localStorage.removeItem(\"token\")\n            //this.dispatch(\"callSplashInOut\", { token: payload.token })\n            // this.dispatch(\"callUsers\", { token: payload.token, user: payload.user_id })\n            //this.dispatch(\"callWidgetDisplay\", { token: payload.token, user_id: payload.user_id })\n            // this.dispatch(\"callOperators\", { token: payload.token })\n        },\n        setProducts(state, payload) {\n            state.products = payload\n            console.info(state.products)\n\n            \n\n            //this.dispatch(\"callSplashInOut\", { token: payload.token })\n            // this.dispatch(\"callUsers\", { token: payload.token, user: payload.user_id })\n            //this.dispatch(\"callWidgetDisplay\", { token: payload.token, user_id: payload.user_id })\n            // this.dispatch(\"callOperators\", { token: payload.token })\n        },\n        \n        resetState(state) {\n            state.user = null;\n        }\n    },\n    actions: {\n        \n        callUsers({ commit }, payload) {\n            commit;\n            payload\n            // let param = {...payload };\n            // sendRequest(this, commit, \"callUsers\", \"user\", param)\n        },\n        callProducts({ commit }) {\n            commit;\n            \n            // let param = {...payload };\n            // sendRequest(this, commit, \"callUsers\", \"user\", param)\n            request.get(\"/products/\", {})\n            .then(response => {\n                //saving the data in the vuex store\n                const {data} = response;\n                sendRequest(this, commit, \"callProducts\", data);\n            })\n            .catch(error => {\n                // commit('setLoading', false, {root:true})\n                try{\n                    var response = error.response.data;\n                    if (response.error) {\n                        commit('setError', response.error_message, {root:true})\n                    }\n                }catch (err){\n                    commit('setError', err.message, {root:true})\n                }\n            });\n        },\n        login({commit}, payload){\n            request.post('/login', payload).then(response => {\n                const { data } = response;\n                console.log(data);\n                commit('setUser', data);\n            }).catch(error => {\n                console.log(error);\n            });\n        },\n        logout({commit}){\n            commit('resetState');\n        }\n    },\n    getters: {\n        user(state) {\n            return state.user\n        },\n        token(state) {\n            return state.token\n        },\n        products(state) {\n            return state.products\n        },\n    },\n    strict: true,\n    plugins: [createPersistedState({\n        key: 'dilsa'\n    })]\n})"]}]}
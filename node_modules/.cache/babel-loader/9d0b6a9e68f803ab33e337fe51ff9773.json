{"remainingRequest":"/home/nanouni/DilsaProject/node_modules/babel-loader/lib/index.js!/home/nanouni/DilsaProject/node_modules/eslint-loader/index.js??ref--13-0!/home/nanouni/DilsaProject/src/store/index.js","dependencies":[{"path":"/home/nanouni/DilsaProject/src/store/index.js","mtime":1634077807811},{"path":"/home/nanouni/DilsaProject/node_modules/cache-loader/dist/cjs.js","mtime":1634074391745},{"path":"/home/nanouni/DilsaProject/node_modules/babel-loader/lib/index.js","mtime":1634074395017},{"path":"/home/nanouni/DilsaProject/node_modules/eslint-loader/index.js","mtime":1634074392193}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKaW1wb3J0IHsgcmVxdWVzdCB9IGZyb20gJy4vYXBpJzsKaW1wb3J0IGNyZWF0ZVBlcnNpc3RlZFN0YXRlIGZyb20gJ3Z1ZXgtcGVyc2lzdGVkc3RhdGUnOyAvLyBpbXBvcnQgaTE4biBmcm9tICdAL2xhbmcvbGFuZycKCmltcG9ydCB7IHNlbmRSZXF1ZXN0IH0gZnJvbSAiLi90cmFuc2FjdGlvblBhcnNlciI7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCB2YXIgc3RvcmUgPSBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIHVzZXI6IG51bGwKICB9LAogIG11dGF0aW9uczogewogICAgc2V0VXNlcjogZnVuY3Rpb24gc2V0VXNlcihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS51c2VyID0gcGF5bG9hZDsgLy90aGlzLmRpc3BhdGNoKCJjYWxsU3BsYXNoSW5PdXQiLCB7IHRva2VuOiBwYXlsb2FkLnRva2VuIH0pCiAgICAgIC8vIHRoaXMuZGlzcGF0Y2goImNhbGxVc2VycyIsIHsgdG9rZW46IHBheWxvYWQudG9rZW4sIHVzZXI6IHBheWxvYWQudXNlcl9pZCB9KQogICAgICAvL3RoaXMuZGlzcGF0Y2goImNhbGxXaWRnZXREaXNwbGF5IiwgeyB0b2tlbjogcGF5bG9hZC50b2tlbiwgdXNlcl9pZDogcGF5bG9hZC51c2VyX2lkIH0pCiAgICAgIC8vIHRoaXMuZGlzcGF0Y2goImNhbGxPcGVyYXRvcnMiLCB7IHRva2VuOiBwYXlsb2FkLnRva2VuIH0pCiAgICB9LAogICAgc2V0UHJvZHVjdHM6IGZ1bmN0aW9uIHNldFByb2R1Y3RzKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLnByb2R1Y3RzID0gcGF5bG9hZDsKICAgICAgY29uc29sZS5pbmZvKHN0YXRlLnByb2R1Y3RzKTsgLy90aGlzLmRpc3BhdGNoKCJjYWxsU3BsYXNoSW5PdXQiLCB7IHRva2VuOiBwYXlsb2FkLnRva2VuIH0pCiAgICAgIC8vIHRoaXMuZGlzcGF0Y2goImNhbGxVc2VycyIsIHsgdG9rZW46IHBheWxvYWQudG9rZW4sIHVzZXI6IHBheWxvYWQudXNlcl9pZCB9KQogICAgICAvL3RoaXMuZGlzcGF0Y2goImNhbGxXaWRnZXREaXNwbGF5IiwgeyB0b2tlbjogcGF5bG9hZC50b2tlbiwgdXNlcl9pZDogcGF5bG9hZC51c2VyX2lkIH0pCiAgICAgIC8vIHRoaXMuZGlzcGF0Y2goImNhbGxPcGVyYXRvcnMiLCB7IHRva2VuOiBwYXlsb2FkLnRva2VuIH0pCiAgICB9LAogICAgcmVzZXRTdGF0ZTogZnVuY3Rpb24gcmVzZXRTdGF0ZShzdGF0ZSkgewogICAgICBzdGF0ZS51c2VyID0gbnVsbDsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGNhbGxVc2VyczogZnVuY3Rpb24gY2FsbFVzZXJzKF9yZWYsIHBheWxvYWQpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICBjb21taXQ7CiAgICAgIHBheWxvYWQ7IC8vIGxldCBwYXJhbSA9IHsuLi5wYXlsb2FkIH07CiAgICAgIC8vIHNlbmRSZXF1ZXN0KHRoaXMsIGNvbW1pdCwgImNhbGxVc2VycyIsICJ1c2VyIiwgcGFyYW0pCiAgICB9LAogICAgY2FsbFByb2R1Y3RzOiBmdW5jdGlvbiBjYWxsUHJvZHVjdHMoX3JlZjIpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIGNvbW1pdDsgLy8gbGV0IHBhcmFtID0gey4uLnBheWxvYWQgfTsKICAgICAgLy8gc2VuZFJlcXVlc3QodGhpcywgY29tbWl0LCAiY2FsbFVzZXJzIiwgInVzZXIiLCBwYXJhbSkKCiAgICAgIHJlcXVlc3QuZ2V0KCIvcHJvZHVjdHMvIiwge30pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgLy9zYXZpbmcgdGhlIGRhdGEgaW4gdGhlIHZ1ZXggc3RvcmUKICAgICAgICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgc2VuZFJlcXVlc3QoX3RoaXMsIGNvbW1pdCwgImNhbGxQcm9kdWN0cyIsIGRhdGEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAvLyBjb21taXQoJ3NldExvYWRpbmcnLCBmYWxzZSwge3Jvb3Q6dHJ1ZX0pCiAgICAgICAgdHJ5IHsKICAgICAgICAgIHZhciByZXNwb25zZSA9IGVycm9yLnJlc3BvbnNlLmRhdGE7CgogICAgICAgICAgaWYgKHJlc3BvbnNlLmVycm9yKSB7CiAgICAgICAgICAgIGNvbW1pdCgnc2V0RXJyb3InLCByZXNwb25zZS5lcnJvcl9tZXNzYWdlLCB7CiAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIGNvbW1pdCgnc2V0RXJyb3InLCBlcnIubWVzc2FnZSwgewogICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgZ2V0dGVyczogewogICAgdXNlcjogZnVuY3Rpb24gdXNlcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlcjsKICAgIH0sCiAgICBwcm9kdWN0czogZnVuY3Rpb24gcHJvZHVjdHMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnByb2R1Y3RzOwogICAgfQogIH0sCiAgc3RyaWN0OiB0cnVlLAogIHBsdWdpbnM6IFtjcmVhdGVQZXJzaXN0ZWRTdGF0ZSh7CiAgICBrZXk6ICdkaWxzYScKICB9KV0KfSk7"},{"version":3,"sources":["/home/nanouni/DilsaProject/src/store/index.js"],"names":["Vue","Vuex","request","createPersistedState","sendRequest","use","store","Store","state","user","mutations","setUser","payload","setProducts","products","console","info","resetState","actions","callUsers","commit","callProducts","get","then","response","data","catch","error","error_message","root","err","message","getters","strict","plugins","key"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC,C,CACA;;AAEA,SAAQC,WAAR,QAA2B,qBAA3B;AAEAJ,GAAG,CAACK,GAAJ,CAAQJ,IAAR;AAGA,OAAO,IAAMK,KAAK,GAAG,IAAIL,IAAI,CAACM,KAAT,CAAe;AAChCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE;AADH,GADyB;AAIhCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OADO,mBACCH,KADD,EACQI,OADR,EACiB;AACpBJ,MAAAA,KAAK,CAACC,IAAN,GAAaG,OAAb,CADoB,CAEpB;AACA;AACA;AACA;AACH,KAPM;AAQPC,IAAAA,WARO,uBAQKL,KARL,EAQYI,OARZ,EAQqB;AACxBJ,MAAAA,KAAK,CAACM,QAAN,GAAiBF,OAAjB;AACAG,MAAAA,OAAO,CAACC,IAAR,CAAaR,KAAK,CAACM,QAAnB,EAFwB,CAMxB;AACA;AACA;AACA;AACH,KAlBM;AAoBPG,IAAAA,UApBO,sBAoBIT,KApBJ,EAoBW;AACdA,MAAAA,KAAK,CAACC,IAAN,GAAa,IAAb;AACH;AAtBM,GAJqB;AA4BhCS,EAAAA,OAAO,EAAE;AAELC,IAAAA,SAFK,2BAEiBP,OAFjB,EAE0B;AAAA,UAAnBQ,MAAmB,QAAnBA,MAAmB;AAC3BA,MAAAA,MAAM;AACNR,MAAAA,OAAO,CAFoB,CAG3B;AACA;AACH,KAPI;AAQLS,IAAAA,YARK,+BAQoB;AAAA;;AAAA,UAAVD,MAAU,SAAVA,MAAU;AACrBA,MAAAA,MAAM,CADe,CAGrB;AACA;;AACAlB,MAAAA,OAAO,CAACoB,GAAR,CAAY,YAAZ,EAA0B,EAA1B,EACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AACd;AACA,YAAOC,IAAP,GAAeD,QAAf,CAAOC,IAAP;AACArB,QAAAA,WAAW,CAAC,KAAD,EAAOgB,MAAP,EAAe,cAAf,EAA+BK,IAA/B,CAAX;AACH,OALD,EAMCC,KAND,CAMO,UAAAC,KAAK,EAAI;AACZ;AACA,YAAG;AACC,cAAIH,QAAQ,GAAGG,KAAK,CAACH,QAAN,CAAeC,IAA9B;;AACA,cAAID,QAAQ,CAACG,KAAb,EAAoB;AAChBP,YAAAA,MAAM,CAAC,UAAD,EAAaI,QAAQ,CAACI,aAAtB,EAAqC;AAACC,cAAAA,IAAI,EAAC;AAAN,aAArC,CAAN;AACH;AACJ,SALD,CAKC,OAAOC,GAAP,EAAW;AACRV,UAAAA,MAAM,CAAC,UAAD,EAAaU,GAAG,CAACC,OAAjB,EAA0B;AAACF,YAAAA,IAAI,EAAC;AAAN,WAA1B,CAAN;AACH;AACJ,OAhBD;AAiBH;AA9BI,GA5BuB;AA4DhCG,EAAAA,OAAO,EAAE;AACLvB,IAAAA,IADK,gBACAD,KADA,EACO;AACR,aAAOA,KAAK,CAACC,IAAb;AACH,KAHI;AAILK,IAAAA,QAJK,oBAIIN,KAJJ,EAIW;AACZ,aAAOA,KAAK,CAACM,QAAb;AACH;AANI,GA5DuB;AAoEhCmB,EAAAA,MAAM,EAAE,IApEwB;AAqEhCC,EAAAA,OAAO,EAAE,CAAC/B,oBAAoB,CAAC;AAC3BgC,IAAAA,GAAG,EAAE;AADsB,GAAD,CAArB;AArEuB,CAAf,CAAd","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport {request} from './api'\nimport createPersistedState from 'vuex-persistedstate'\n// import i18n from '@/lang/lang'\n\nimport {sendRequest } from \"./transactionParser\";\n\nVue.use(Vuex)\n\n\nexport const store = new Vuex.Store({\n    state: {\n        user: null,\n    },\n    mutations: {\n        setUser(state, payload) {\n            state.user = payload\n            //this.dispatch(\"callSplashInOut\", { token: payload.token })\n            // this.dispatch(\"callUsers\", { token: payload.token, user: payload.user_id })\n            //this.dispatch(\"callWidgetDisplay\", { token: payload.token, user_id: payload.user_id })\n            // this.dispatch(\"callOperators\", { token: payload.token })\n        },\n        setProducts(state, payload) {\n            state.products = payload\n            console.info(state.products)\n\n            \n\n            //this.dispatch(\"callSplashInOut\", { token: payload.token })\n            // this.dispatch(\"callUsers\", { token: payload.token, user: payload.user_id })\n            //this.dispatch(\"callWidgetDisplay\", { token: payload.token, user_id: payload.user_id })\n            // this.dispatch(\"callOperators\", { token: payload.token })\n        },\n        \n        resetState(state) {\n            state.user = null\n        }\n    },\n    actions: {\n        \n        callUsers({ commit }, payload) {\n            commit;\n            payload\n            // let param = {...payload };\n            // sendRequest(this, commit, \"callUsers\", \"user\", param)\n        },\n        callProducts({ commit }) {\n            commit;\n            \n            // let param = {...payload };\n            // sendRequest(this, commit, \"callUsers\", \"user\", param)\n            request.get(\"/products/\", {})\n            .then(response => {\n                //saving the data in the vuex store\n                const {data} = response;\n                sendRequest(this, commit, \"callProducts\", data);\n            })\n            .catch(error => {\n                // commit('setLoading', false, {root:true})\n                try{\n                    var response = error.response.data;\n                    if (response.error) {\n                        commit('setError', response.error_message, {root:true})\n                    }\n                }catch (err){\n                    commit('setError', err.message, {root:true})\n                }\n            });\n        },\n    },\n    getters: {\n        user(state) {\n            return state.user\n        },\n        products(state) {\n            return state.products\n        },\n    },\n    strict: true,\n    plugins: [createPersistedState({\n        key: 'dilsa'\n    })]\n})"]}]}